---
import { CollectionEntry, getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";
import readingTime from "../utils/readingTime";
import Footer from "../components/Footer.astro";

interface Props {
  post: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { post: entry },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();
---

<Layout title={post.data.title} meta={{ description: post.data.description, title: post.data.title, image: post.data.image }}>
  <main class="flex justify-center items-center my-4 font-serif">
    <article
      class="max-w-2xl min-w-0 px-4 prose dark:prose-invert prose-base md:prose-lg"
    >
      <h1>{post.data.title}</h1>
      <div class="flex flex-col -space-y-1 prose not-prose font-extralight italic">
        {
          post.data.author && (
            <div class="flex space-x-2 items-center">
              <p class="dark:text-gray-300 text-gray-700">By {post.data.author}</p>
            </div>
          )
        }
        {
          post.data.publishDate && (
            <div class="flex space-x-2 items-center">
              <p class="dark:text-gray-300 text-gray-700">
                {post.data.publishDate.toLocaleDateString("en-US", {
                  month: "long",
                  day: "numeric",
                  year: "numeric",
                })}
              </p>
            </div>
          )
        }
        {
          post.data.showReadTime && (
            <div class="flex space-x-2 items-center">
              <p class="dark:text-gray-300 text-gray-700">
                {readingTime(post.body)}
              </p>
            </div>
          )
        }
      </div>
      {post.data.image ? <img src={post.data.image} alt="" /> : <>{(post.data.publishDate || post.data.showReadTime || post.data.author) ? <hr /> : <></>}</>}
      <Content />
    </article>
  </main>
</Layout>

<style is:global>
  .MathJax[display="true"][jax="SVG"] {
    display: flex !important;
    justify-content: center !important;
  }

  .MathJax[jax="SVG"] {
    display: inline-block !important;
    vertical-align: middle !important;
  }
</style>
